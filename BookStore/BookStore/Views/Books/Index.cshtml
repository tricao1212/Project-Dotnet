@model PaginatedList<BookStore.Models.Book>

@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_Layout2.cshtml";
}
<div class="container">

	<h1>Index</h1>

	<p>
		<a asp-action="Create">Create New</a>
	</p>
	<form asp-action="Index" method="get">
		<div class="form-actions no-color">
			<p>
				Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
				<input type="submit" value="Search" class="btn btn-default" /> |
				<a asp-action="Index">Back to Full List</a>
			</p>
		</div>
	</form>
	<table class="table">
		<thead>
			<tr>
				<th>
					Image
				</th>
				<th>
					Title
				</th>
				<th>
					Genres
				</th>
				<th>
					Price
				</th>
				<th>
					Quantity
				</th>
				<th>
					Description
				</th>
				<th>
					Public Date
				</th>
				<th>
					Author
				</th>
				<th>
					Publisher
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>
						<img style="max-width: 100px; max-height: 100px" src="@Html.DisplayFor(modelItem => item.ImgURL)">
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Title)
					</td>
					<td>
						@foreach (var genre in item.Genres)
						{
							@Html.DisplayFor(modelItem => genre.Name)
							@:
						}
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Price)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Quantity)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Description)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.PublicDate)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Author.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Publisher.Name)
					</td>
					<td>
						<a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
						<a asp-action="Details" asp-route-id="@item.Id">Details</a> |
						<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
					</td>
				</tr>
			}
		</tbody>
	</table>
	@{
		var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
		var nextDisabled = !Model.HasNextPage ? "disabled" : "";
	}
	<a asp-action="Index"
	   asp-route-sortOrder="@ViewData["CurrentSort"]"
	   asp-route-pageNumber="@(Model.PageIndex - 1)"
	   asp-route-currentFilter="@ViewData["CurrentFilter"]"
	   class="btn btn-default @prevDisabled">
		Previous
	</a>
	<a asp-action="Index"
	   asp-route-sortOrder="@ViewData["CurrentSort"]"
	   asp-route-pageNumber="@(Model.PageIndex + 1)"
	   asp-route-currentFilter="@ViewData["CurrentFilter"]"
	   class="btn btn-default @nextDisabled">
		Next
	</a>
</div>