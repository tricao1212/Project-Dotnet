@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore;
@using BookStore.Models

@inject SignInManager<BookUser> SignInManager
@inject UserManager<BookUser> UserManager
@inject BookStore.Data.BookStoreContext DBContext
@{
	var defaultAva = "images/avatar/default.jpg";
	var user = await DBContext.Users.Include(u => u.Profile).SingleOrDefaultAsync(u => u.UserName == User.Identity.Name);
}
<ul class="navbar-nav">
	@if (SignInManager.IsSignedIn(User))
	{
		<li class="nav-item">
			<a id="manage" class="nav-link text-dark" asp-controller="Account" asp-action="EditProfile" title="Manage">
				<span class="avatar-container">
					<img id="output" src="~/@(user.Profile?.Avatar?? defaultAva)" />
				</span>
			</a>
		</li>
		<li class="nav-item">
			@{
				if (user.Profile.FullName != null)
				{
					<a id="manage" class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="EditProfile" title="Manage">Hello
					@Html.DisplayTextFor(u => user.Profile.FullName)
					</a>
				}else
                {
                    <a id="manage" class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="EditProfile" title="Manage">Hello @UserManager.GetUserName(User)!</a>
                }
			}
		</li>
		<li class="nav-item">
			<form id="logoutForm" class="form-inline" asp-area="" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
				<button style="font-size:x-large" id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
			</form>
		</li>
	}
	else
	{
		<li class="nav-item">
			<a class="nav-link text-dark" id="register" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
		</li>
		<li class="nav-item">
			<a class="nav-link text-dark" id="login" asp-area="" asp-controller="Account" asp-action="Login">Login</a>
		</li>
	}
</ul>
<style>
	#output {
		width: 100%;
		height: 100%
	}

	.avatar-container {
		width: 60px;
		height: 60px;
		border-radius: 50%;
		display: inline-block;
		overflow: hidden
	}

	#manage {
		display: inline-flex;
		align-items: center;
		column-gap: 10px
	}

	.nav-item {
		display: flex;
		align-items: center
	}
</style>