@model BookStore.Models.Book
@{
	ViewData["Title"] = "Book Details";
	Layout = "_Layout";
}
<style>
	.frame {
		display: flex;
		width: 100%;
		height: 500px;
		justify-content: center;
		align-items: center;
		border: 2px solid lightgray;
		border-radius: 10px;
	}

	.content {
		width: 100%;
		height: 500px;
		padding: 20px;
		border-radius: 10px;
		box-shadow: 0 0.1rem 2rem rgba(30,30,30,0.1);
	}
</style>
<div class="container">
	<div class="row">
		<h1 class="title">@Html.DisplayFor(m=>m.Title)</h1>
		<div class="col-md-6">
			<div class="frame">
				<img src="/@Html.DisplayFor(model => model.ImgURL)" style="width:50%" />
			</div>
		</div>
		<div class="col-md-6">
			<div class="content">
				<dl class="row">
					<dt class="col-sm-3">
						@Html.DisplayNameFor(model => model.Price)
					</dt>
					<dd class="col-sm-9">
						@Html.DisplayFor(model => model.Price)
					</dd>
					<dt class="col-sm-3">
						@Html.DisplayNameFor(model => model.Genres)
					</dt>
					<dd class="col-sm-9">
						@{
							List<Genre> genres = ViewBag.Genres;
						}
						@foreach (var genre in genres)
						{
							@Html.Raw(Model?.Genres!=null&&Model.Genres.Any(x=>x.Id==genre.Id)?genre.Name+" ":"")
						}
					</dd>
					<dt class="col-sm-3">
						Remain
					</dt>
					<dd class="col-sm-9">
						@Html.DisplayFor(model => model.Quantity)
					</dd>
					<dt class="col-sm-3">
						@Html.DisplayNameFor(model => model.Author)
					</dt>
					<dd class="col-sm-9">
						@Html.DisplayFor(model => model.Author.Name)
					</dd>
					<dt class="col-sm-3">
						@Html.DisplayNameFor(model => model.Publisher)
					</dt>
					<dd class="col-sm-9">
						@Html.DisplayFor(model => model.Publisher.Name)
					</dd>
					<dt class="col-sm-3">
						@Html.DisplayNameFor(model => model.PublicDate)
					</dt>
					<dd class="col-sm-9">
						@Html.DisplayFor(model => model.PublicDate)
					</dd>
				</dl>
				<form asp-action="AddToCartWithQuantity" asp-controller="Carts" asp-route-id="@Model.Id" method="post">
					<div class="row">
						<div class="col-3" id="button-form">
							<div class="value-button" id="decrease" onclick="decreaseValue()" value="Decrease Value">-</div>
							<input class="quantity" min="1" name="quantity" value="1" type="number" id="number" max="@ViewBag.Quantity">
							<div class="value-button" id="increase" onclick="increaseValue()" value="Increase Value">+</div>
						</div>
						@{
							decimal total = ViewBag.Price;
							string tol = total.ToString();
						}
						<h4 class="col-9">Total: <span id="total">$@tol</span> </h4>
					</div>
					<div style="margin-top:20px">
						<input type="submit" value="Add to Cart" class="btn btn-outline-warning" />
					</div>
				</form>
			</div>
		</div>
		<h3>Description</h3>
	</div>
	<p>@Html.DisplayFor(model => model.Description)</p>
</div>
<style>
	.value-button {
		display: inline-block;
		border: 1px solid #ddd;
		margin-bottom: 5.5px;
		width: 40px;
		height: 40px;
		text-align: center;
		vertical-align: middle;
		padding: 5px 5px 5px 5px;
		background: #eee;
		-webkit-touch-callout: none;
		-webkit-user-select: none;
		-moz-user-select: none;
		-ms-user-select: none;
		user-select: none;
	}

		.value-button:hover {
			cursor: pointer;
		}

	#decrease {
		margin-right: -4px;
		border-radius: 8px 0 0 8px;
	}

	#increase {
		margin-left: -4px;
		border-radius: 0 8px 8px 0;
	}

	input#number {
		text-align: center;
		border: none;
		border-top: 1px solid #ddd;
		border-bottom: 1px solid #ddd;
		margin: 0px;
		width: 40px;
		height: 40px;
	}

	input[type=number]::-webkit-inner-spin-button,
	input[type=number]::-webkit-outer-spin-button {
		-webkit-appearance: none;
		margin: 0;
	}
</style>
<script>
	function increaseValue() {
		var value = parseFloat(document.getElementById('number').value, 10);
		value = isNaN(value) ? 0 : value;
		if (value >= @ViewBag.Quantity) {
			document.getElementById("decrease").disabled = true;
		} else {
			value++;
			document.getElementById('number').value = value;
			updateTotal();
		}
	}

	function decreaseValue() {
		var value = parseFloat(document.getElementById('number').value, 10);
		value = isNaN(value) ? 0 : value;
		value < 1 ? value = 1 : '';
		value--;
		document.getElementById('number').value = value;
		updateTotal();
	}
	function updateTotal() {
		quantity = document.getElementById('number').value;

		var total = quantity * (@ViewBag.Price);
		document.getElementById('total').textContent = "$" + total.toFixed(2);
	}
</script>